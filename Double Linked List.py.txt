class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class SinglyLinkedList:
    def __init__(self):
        self.head = None

    def insert_at_beginning(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def insert_at_position(self, position, data):
        new_node = Node(data)
        if position == 0:
            new_node.next = self.head
            self.head = new_node
        else:
            current = self.head
            for _ in range(position - 1):
                if current is None:
                    raise IndexError("Position out of bounds")
                current = current.next
            new_node.next = current.next
            current.next = new_node

    def insert_at_end(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.next is not None:
                current = current.next
            current.next = new_node

    # Add other methods (delete, linear search, read, sort) here

    def read(self):
        elements = []
        current = self.head
        while current is not None:
            elements.append(current.data)
            current = current.next
        return elements

    def sort(self):
        # Using selection sort for simplicity
        current = self.head
        while current is not None:
            min_node = current
            runner = current.next
            while runner is not None:
                if runner.data < min_node.data:
                    min_node = runner
                runner = runner.next
            current.data, min_node.data = min_node.data, current.data
            current = current.next


# Example usage
singly_linked_list = SinglyLinkedList()

# Read numbers from file
with open('numbers-2.txt', 'r') as file:
    values = [int(line.strip()) for line in file]

# Insert values
for value in values:
    singly_linked_list.insert_at_end(value)

print("Original List:", singly_linked_list.read())

singly_linked_list.sort()
print("Sorted List:", singly_linked_list.read())
